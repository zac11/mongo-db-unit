{
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-13T05:16:00.139Z",
    "end": "2018-05-13T05:16:00.558Z",
    "duration": 419,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "113cc280-22d9-4788-96ff-cdca83d4d49e",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [
      {
        "title": "\"before all\" hook",
        "fullTitle": "\"before all\" hook",
        "timedOut": false,
        "duration": 29,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "//connects to mongoose database\nmongoose.connect('mongodb://localhost/testdb');\nmongoose.connection.once('open',()=>{\n    console.log('Congrats! Connected to Mongo DB');\n    done();\n}).on('error',()=>{\n    console.log('Connection error ',error);\n});",
        "err": {},
        "isRoot": true,
        "uuid": "3c624db8-d7b4-42cb-b7c9-c806b7910b76",
        "isHook": true,
        "skipped": false
      },
      {
        "title": "\"before each\" hook",
        "fullTitle": "\"before each\" hook",
        "timedOut": false,
        "duration": 18,
        "pass": false,
        "fail": false,
        "pending": false,
        "code": "mongoose.connection.collections.users.drop(()=>{\n    done();\n});",
        "err": {},
        "isRoot": true,
        "uuid": "f1a796ee-5229-4f0c-be4c-a266469aafc3",
        "isHook": true,
        "skipped": false
      }
    ],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "303c961e-03de-41e8-9be9-923c55ef9bcc",
        "title": "Saves a single record",
        "fullFile": "/Users/zac/Documents/api-testing/mongo-testing/mongo-db-unit/test/save_user.js",
        "file": "/test/save_user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "saves a single record to db",
            "fullTitle": "Saves a single record saves a single record to db",
            "timedOut": false,
            "duration": 76,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var user = new User({\n    firstname : \"David\",\n    lastname : \"Bowie\",\n    id : 123,\n    plan : \"Mars Cries\"\n});\nuser.save().then(()=>{\n   expect(user.isNew).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7aedcbd3-022f-431b-88f5-7aeecb519ccd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "7aedcbd3-022f-431b-88f5-7aeecb519ccd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 76,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "50261722-d1f8-44ce-abfe-ebfb73c438c5",
        "title": "Update Records",
        "fullFile": "/Users/zac/Documents/api-testing/mongo-testing/mongo-db-unit/test/user_crud.js",
        "file": "/test/user_crud.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Update Records \"before each\" hook",
            "timedOut": false,
            "duration": 74,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "user = new User({\n    firstname : \"Allan\",\n    lastname : \"Downer\",\n    id : 125,\n    plan : \"Paid\"\n});\nuser.save().then(()=>{\n    expect(user.isNew).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "fb124cdc-e4f2-4814-bd3f-b5322079b85a",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "updates one record in database",
            "fullTitle": "Update Records updates one record in database",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "User.findOneAndUpdate({firstname : \"Allan\"},{firstname : \"Allen\"}).then(()=>{\n        User.findOne({firstname : \"Allan\"}).then((result)=>{\n            expect(result).to.be.null;\n            done();\n        });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "00edeb63-dc23-4fef-8e68-706c7804b806",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "00edeb63-dc23-4fef-8e68-706c7804b806"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 20,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "0e53c80f-fe29-44ef-ba87-cf4bec261eaf",
        "title": "It deletes a user",
        "fullFile": "/Users/zac/Documents/api-testing/mongo-testing/mongo-db-unit/test/user_delete.js",
        "file": "/test/user_delete.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "It deletes a user \"before each\" hook",
            "timedOut": false,
            "duration": 69,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "user = new User({\n    firstname : \"Mike\",\n    lastname : \"Davids\",\n    id: 1245,\n    plan : \"Pricing\"\n});\nuser.save().then(()=>{\n    expect(user.isNew).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "90981a53-298c-4409-adcc-362716fbb3e5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "now deletes a record from the db",
            "fullTitle": "It deletes a user now deletes a record from the db",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "User.findOneAndRemove({firstname : \"Mike\"}).then(()=>{\n    User.findOne({firstname : \"Mike\"}).then((result)=>{\n        expect(result).to.be.null;\n        done();\n    });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2bbf3895-244f-4715-9212-186af4bfebbe",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2bbf3895-244f-4715-9212-186af4bfebbe"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 15,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      },
      {
        "uuid": "c2b7fdca-e841-451c-8bfd-5b5cd0fd748d",
        "title": "Finding records from a user",
        "fullFile": "/Users/zac/Documents/api-testing/mongo-testing/mongo-db-unit/test/user_search.js",
        "file": "/test/user_search.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "Finding records from a user \"before each\" hook",
            "timedOut": false,
            "duration": 94,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "user = new User({\n    firstname : \"Junior\",\n    lastname : 'Dala',\n    id : 909,\n    plan : 'paid'\n})\nuser.save().then(()=>{\n    expect(user.isNew).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5306a866-3eb8-4649-bf75-8b7728e6a4e2",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "find a user from model",
            "fullTitle": "Finding records from a user find a user from model",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "User.findOne({firstname : 'Junior'}).then((result)=>{\n    expect(result.firstname).to.equal('Junior');\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d8c32dcf-0af4-415a-9233-21c6cf0c2be9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "d8c32dcf-0af4-415a-9233-21c6cf0c2be9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2,
        "root": false,
        "rootEmpty": false,
        "_timeout": 50000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 50000
  },
  "copyrightYear": 2018
}